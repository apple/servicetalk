<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2018, 2020, 2022 Apple Inc. and the ServiceTalk project authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<FindBugsFilter>
  <!-- False positive. Everything involved has a default @NonNull from the package-info.java -->
  <Match>
    <Class name="io.servicetalk.http.api.DefaultHttpCookies"/>
    <Method name="equals"/>
    <LocalVariable name="key1"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- Heisenbug false positive. Sometimes spotbugs complains, sometimes it doesn't.
  Everything involved has a default @NonNull from the package-info.java -->
  <Match>
    <Class name="io.servicetalk.http.api.DefaultHttpHeaders"/>
    <Method name="equals"/>
    <LocalVariable name="name1"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- False positive. Maybe https://github.com/spotbugs/spotbugs/issues/616 -->
  <Match>
    <Class name="io.servicetalk.http.api.StreamingHttpPayloadHolder$TrailersMapper"/>
    <Method name="mapOnNext"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- False positive. Maybe https://github.com/spotbugs/spotbugs/issues/616 -->
  <Match>
    <Class name="io.servicetalk.http.api.DefaultBlockingStreamingHttpServerResponse"/>
    <Method name="context"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- False positive -->
  <Match>
    <Class name="io.servicetalk.http.api.ContentCodingHttpServiceFilter"/>
    <Method name="codingForResponse"/>
    <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
  </Match>

  <!-- Intentional reference comparison to avoid re-parsing if no value -->
  <Match>
    <Class name="io.servicetalk.http.api.Uri3986"/>
    <Or>
      <Method name="isNullableComponent"/>
      <Method name="unwrapNullableComponent"/>
    </Or>
    <Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.Uri3986"/>
    <Method name='&lt;clinit&gt;'/>
    <Bug pattern="DM_STRING_CTOR"/>
  </Match>

  <!-- Return type is designed such that each type must override the method specifically to override the return type -->
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingToUpgradableStreamingHttpResponse"/>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingUpgradableHttpResponseConverter"/>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingUpgradableHttpResponseConverter"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$UpgradableStreamingHttpResponseToBlockingStreaming"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$UpgradableHttpResponseToBlockingConverter"/>
      <Class name="io.servicetalk.http.api.HttpClientToStreamingHttpClient$UpgradableHttpResponseToUpgradableStreamingHttpResponse"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient$UpgradableStreamingHttpResponseToUpgradableHttpResponse"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient$UpgradablePayloadResponse"/>
    </Or>
    <Or>
      <Method name="status"/>
      <Method name="version"/>
    </Or>
    <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
  </Match>

  <!-- Parameters/state is intentional -->
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.ContentEncodingHttpServiceFilter"/>
      <Class name="io.servicetalk.http.api.DefaultStreamingHttpRequestResponseFactory"/>
      <Class name="io.servicetalk.http.api.RedirectConfigBuilder"/>
    </Or>
    <Or>
      <Method name ="&lt;init&gt;"/>
      <Method name ="allowedMethods"/>
      <Method name ="headersToRedirect"/>
      <Method name ="trailersToRedirect"/>
    </Or>
    <Bug pattern="EI_EXPOSE_REP2"/>
  </Match>

  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.BlockingHttpClient"/>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient"/>
    </Or>
    <Method name="reserveConnection"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingHttpRequester"/>
    <Or>
      <Method name="close"/>
      <Method name="request"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingHttpService"/>
    <Or>
      <Method name="close"/>
      <Method name="handle"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingStreamingHttpMessageBodyUtils$1"/>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingStreamingHttpMessageBodyUtils$DefaultHttpMessageBodyIterator"/>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpRequester"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient$ReservedStreamingHttpConnectionToReservedBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$ReservedStreamingHttpConnectionToBlockingStreaming"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnectionToBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnectionToBlockingStreamingHttpConnection"/>
    </Or>
    <Or>
      <Method name="close"/>
      <Method name="request"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpService"/>
      <Class name="io.servicetalk.http.api.StreamingHttpServiceToBlockingHttpService"/>
      <Class name="io.servicetalk.http.api.StreamingHttpServiceToBlockingStreamingHttpService"/>
    </Or>
    <Or>
      <Method name="close"/>
      <Method name="handle"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingToStreamingService"/>
    <Or>
      <Method name="lambda$null$0"/>
      <Method name="lambda$handle$0"/>
      <Method name="lambda$closeAsync$2"/>
      <Method name="lambda$closeAsyncGracefully$3"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingUtils"/>
    <Or>
      <Method name="blockingInvocation"/>
      <Method name="futureGetCancelOnInterrupt"/>
      <Method name="request"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingUtils$RunnableCheckedException"/>
    <Method name="run"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingRequestUtils"/>
    <Method name="request"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.BlockingStreamingToStreamingService"/>
    <Or>
      <Method name="lambda$closeAsync$0"/>
      <Method name="lambda$closeAsyncGracefully$1"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.DefaultHttpRequest"/>
      <Class name="io.servicetalk.http.api.DefaultHttpResponse"/>
    </Or>
    <Method name="catchPayloadFailure"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_THROWABLE"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.DelegatingHttpServerBuilder"/>
    <Method name="listenAndAwait"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.DelegatingHttpServerBuilder"/>
      <Class name="io.servicetalk.http.api.HttpServerBuilder"/>
    </Or>
    <Or>
      <Method name="listenAndAwait"/>
      <Method name="listenBlockingAndAwait"/>
      <Method name="listenBlockingStreamingAndAwait"/>
      <Method name="listenStreamingAndAwait"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.FormUrlEncodedHttpDeserializer$1"/>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.FormUrlEncodedHttpSerializer"/>
    <Method name="urlEncode"/>
    <Bug pattern="THROWS_METHOD_THROWS_RUNTIMEEXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.FormUrlEncodedHttpSerializer$1"/>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.HttpClient"/>
      <Class name="io.servicetalk.http.api.HttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient$ReservedStreamingHttpConnectionToReservedBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$ReservedStreamingHttpConnectionToBlockingStreaming"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient$ReservedStreamingHttpConnectionToReservedHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnectionToBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnectionToBlockingStreamingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpConnectionToHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpServiceToBlockingStreamingHttpService"/>
    </Or>
    <Or>
      <Method name="close"/>
      <Method name="closeGracefully"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.HttpDataSourceTransformations$HttpBufferFilterIterable$JustBufferBlockingIterator"/>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.HttpStringDeserializer$1"/>
      <Class name="io.servicetalk.http.api.HttpStringSerializer$1"/>
    </Or>
    <Method name="close"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.ReservedBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.ReservedBlockingStreamingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingHttpClient$ReservedStreamingHttpConnectionToReservedBlockingHttpConnection"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$ReservedStreamingHttpConnectionToBlockingStreaming"/>
    </Or>
    <Method name="release"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.StatelessTrailersTransformer"/>
    <Or>
      <Method name="catchPayloadFailure"/>
      <Method name="payloadFailed"/>
    </Or>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_THROWABLE"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.StreamingHttpPayloadHolder$TrailersMapper"/>
    <Method name="mapOnError"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_THROWABLE"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.StreamingHttpServiceToOffloadedStreamingHttpService"/>
    <Method name="lambda$handle$1"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.TrailersTransformer"/>
    <Method name="catchPayloadFailure"/>
    <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_THROWABLE"/>
  </Match>
</FindBugsFilter>
