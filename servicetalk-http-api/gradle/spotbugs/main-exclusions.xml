<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2018, 2020 Apple Inc. and the ServiceTalk project authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<FindBugsFilter>
  <!-- Implementing Map.Entry allows us to avoid object allocation on each iteration. Also this class is internal at the moment. -->
  <Match>
    <Class name="io.servicetalk.http.api.ReadOnlyHttpHeaders$ReadOnlyIterator"/>
    <Bug pattern="PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS"/>
  </Match>

  <!-- False positive. Everything involved has a default @NonNull from the package-info.java -->
  <Match>
    <Class name="io.servicetalk.http.api.DefaultHttpCookies"/>
    <Method name="equals"/>
    <LocalVariable name="key1"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- Heisenbug false positive. Sometimes spotbugs complains, sometimes it doesn't.
  Everything involved has a default @NonNull from the package-info.java -->
  <Match>
    <Class name="io.servicetalk.http.api.DefaultHttpHeaders"/>
    <Method name="equals"/>
    <LocalVariable name="name1"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- False positive. Maybe https://github.com/spotbugs/spotbugs/issues/616 -->
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.StreamingHttpPayloadHolder$1"/>
      <Class name="io.servicetalk.http.api.StreamingHttpPayloadHolder$2"/>
    </Or>
    <Method name="mapOnNext"/>
    <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
  </Match>

  <!-- Intentional reference comparison to avoid re-parsing if no value -->
  <Match>
    <Class name="io.servicetalk.http.api.Uri3986"/>
    <Or>
      <Method name="isNullableComponent"/>
      <Method name="unwrapNullableComponent"/>
    </Or>
    <Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ"/>
  </Match>
  <Match>
    <Class name="io.servicetalk.http.api.Uri3986"/>
    <Method name='&lt;clinit&gt;'/>
    <Bug pattern="DM_STRING_CTOR"/>
  </Match>

  <!-- Return type is designed such that each type must override the method specifically to override the return type -->
  <Match>
    <Or>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingToUpgradableStreamingHttpResponse"/>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingUpgradableHttpResponseConverter"/>
      <Class name="io.servicetalk.http.api.BlockingStreamingHttpClientToStreamingHttpClient$BlockingUpgradableHttpResponseConverter"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$UpgradableStreamingHttpResponseToBlockingStreaming"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToBlockingStreamingHttpClient$UpgradableHttpResponseToBlockingConverter"/>
      <Class name="io.servicetalk.http.api.HttpClientToStreamingHttpClient$UpgradableHttpResponseToUpgradableStreamingHttpResponse"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient$UpgradableStreamingHttpResponseToUpgradableHttpResponse"/>
      <Class name="io.servicetalk.http.api.StreamingHttpClientToHttpClient$UpgradablePayloadResponse"/>
    </Or>
    <Or>
      <Method name="status"/>
      <Method name="version"/>
    </Or>
    <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
  </Match>
</FindBugsFilter>
