name: Pull Request Builder
on:
  pull_request_target:
    branches: [ main ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [ 8, 11 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Print JDK Version
        run: java -version
      - name: Print Linux Version
        if: ${{ runner.os == 'Linux' }}
        run: lsb_release -a; uname -a
      - name: Print Windows Version
        if: ${{ runner.os == 'Windows' }}
        run: systeminfo | findstr /C:"OS"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Configure Windows Pagefile
        if: ${{ runner.os == 'Windows' }}
        # https://github.community/t/error-the-paging-file-is-too-small-for-this-operation-to-complete/17141
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 16GB
      - name: Build with Gradle
        env:
          CI: true
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
        run: ./gradlew --parallel --max-workers=4 clean test
      - name: Publish Test Results
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: ${{ matrix.os }} JDK ${{ matrix.java }} Test Report
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11 ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Print JDK Version
        run: java -version
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        env:
          CI: true
        run: ./gradlew --parallel --max-workers=4 clean quality
      - name: Publish Checkstyle Results
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@v1.2
        with:
          name: JDK ${{ matrix.java }} Checkstyle
          path: '**/build/reports/checkstyle/*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish PMD Results
        if: ${{ always() }}
        uses: jwgmeligmeyling/pmd-github-action@v1.2
        with:
          name: JDK ${{ matrix.java }} PMD
          path: '**/build/reports/pmd/*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish SpotBugs Results
        if: ${{ always() }}
        uses: jwgmeligmeyling/spotbugs-github-action@v1.2
        with:
          name: JDK ${{ matrix.java }} SpotBugs
          path: '**/build/reports/spotbugs/*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
