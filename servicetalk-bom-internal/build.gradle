/*
 * Copyright Â© 2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "servicetalk-core"
apply plugin: "java-platform"
apply plugin: "maven-publish"

dependencies {
  constraints {
    // Netty Dependencies
    api "io.netty:netty-buffer:$nettyVersion"
    api "io.netty:netty-codec-http:$nettyVersion"
    api "io.netty:netty-codec-http2:$nettyVersion"
    api "io.netty:netty-handler:$nettyVersion"
    api "io.netty:netty-resolver-dns:$nettyVersion"
    api "io.netty:netty-tcnative-boringssl-static:$tcnativeVersion"
    api "io.netty:netty-transport-native-epoll:$nettyVersion"
    api "io.netty:netty-transport-native-kqueue:$nettyVersion"
    api "io.netty:netty-transport-native-unix-common:$nettyVersion"

    // Transitive Dependencies
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    api "com.google.api.grpc:proto-google-common-protos:$protoGoogleCommonProtosVersion"
    api "com.google.code.findbugs:jsr305:$jsr305Version"
    api "com.google.protobuf:protobuf-java:$protobufVersion"
    api "com.squareup:javapoet:$javaPoetVersion"
    api "io.opentracing:opentracing-api:$openTracingVersion"
    api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    api "io.zipkin.zipkin2:zipkin:$zipkinVersion"
    api "javax.ws.rs:javax.ws.rs-api:$jaxRsVersion"
    api "org.apache.logging.log4j:log4j-api:$log4jVersion"
    api "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
    api "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
    api "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    api "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    api "org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion"
    api "org.jctools:jctools-core:$jcToolsVersion"
    api "org.reactivestreams:reactive-streams:$reactiveStreamsVersion"
    api "org.slf4j:slf4j-api:$slf4jVersion"

    // Java 11 removals
    api "com.sun.activation:javax.activation:$javaxActivationVersion"
    api "com.sun.xml.bind:jaxb-core:$javaxJaxbCoreVersion"
    api "com.sun.xml.bind:jaxb-impl:$javaxJaxbImplVersion"
    api "javax.annotation:javax.annotation-api:$javaxAnnotationsApiVersion"
    api "javax.xml.bind:jaxb-api:$javaxJaxbApiVersion"

    // Testing
    api "junit:junit:$junitVersion"
    api "net.javacrumbs.json-unit:json-unit:$jsonUnitVersion"
    api "net.javacrumbs.json-unit:json-unit-fluent:$jsonUnitVersion"
    api "org.hamcrest:hamcrest-library:$hamcrestVersion"
    api "org.mockito:mockito-core:$mockitoCoreVersion"
    api "org.openjdk.jmh:jmh-core:$jmhCoreVersion"
    api "org.reactivestreams:reactive-streams-tck:$reactiveStreamsVersion"
    api "org.testng:testng:$testngVersion"

    // Testing Support
    api "commons-lang:commons-lang:$commonsLangVersion"
    api "org.apache.directory.server:apacheds-protocol-dns:$apacheDirectoryServerVersion"
    api "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    api "org.apache.logging.log4j:log4j-core:$log4jVersion"
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.javaPlatform
    }
  }
}
