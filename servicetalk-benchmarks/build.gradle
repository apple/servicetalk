/*
 * Copyright Â© 2018 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  if (!repositories) {
    repositories {
      jcenter()
      maven { url "https://plugins.gradle.org/m2/" }
    }
  }

  dependencies {
    classpath "io.servicetalk:servicetalk-gradle-plugin-internal:$project.version"
  }
}

plugins {
  id 'com.github.johnrengelman.shadow' version '4.0.3'
  id "me.champeau.gradle.jmh" version "0.4.8"
}

apply plugin: "servicetalk-library"
apply plugin: "me.champeau.gradle.jmh"

dependencies {
  implementation "io.servicetalk:servicetalk-bom-internal:$project.version"

  compile "io.servicetalk:servicetalk-buffer-netty:$project.version"
  compile "io.servicetalk:servicetalk-concurrent-api:$project.version"
  compile "io.servicetalk:servicetalk-concurrent-api-internal:$project.version"
  compile "io.servicetalk:servicetalk-http-api:$project.version"
  compile "io.servicetalk:servicetalk-redis-netty:$project.version"
  compile "org.openjdk.jmh:jmh-core:1.21"

  implementation "com.google.code.findbugs:jsr305"
  implementation "io.servicetalk:servicetalk-annotations:$project.version"

  testImplementation "io.servicetalk:servicetalk-concurrent-internal:$project.version"
  testImplementation "io.servicetalk:servicetalk-concurrent-api-internal:$project.version"
  testImplementation "io.servicetalk:servicetalk-concurrent-internal-testFixtures:$project.version"
  testImplementation "io.servicetalk:servicetalk-test-resources:$project.version"
  testImplementation "junit:junit"
  testImplementation "org.hamcrest:hamcrest-library"
}

jmh {
  include = ".*Benchmark"
//  iterations = 5
  jmhVersion = "$jmhVersion"
  jvmArgsPrepend = "-Dio.netty.maxDirectMemory=9223372036854775807 -Djmh.executor=CUSTOM -Djmh.executor.class=io.servicetalk.benchmark.concurrent.AsyncContextFriendlyExecutor"
  // jvmArgsPrepend = "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder"
}

jmhJar {
  append('META-INF/spring.handlers')
  append('META-INF/spring.schemas')
  exclude 'LICENSE'
}
