/*
 * Copyright Â© 2018-2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id "com.github.johnrengelman.shadow" version "5.1.0"
  id "me.champeau.gradle.jmh" version "0.5.0-rc-2"
}

apply plugin: "servicetalk-library"

dependencies {
  api platform(project(":servicetalk-bom-internal"))

  implementation project(":servicetalk-annotations")
  implementation project(":servicetalk-buffer-netty")
  implementation project(":servicetalk-concurrent-api")
  implementation project(":servicetalk-concurrent-api-internal")
  implementation project(":servicetalk-http-api")
  implementation project(":servicetalk-http-netty")
  implementation project(":servicetalk-transport-netty-internal")
  implementation "com.google.code.findbugs:jsr305"
  implementation "io.netty:netty-codec-http"
  implementation "org.openjdk.jmh:jmh-core"

  testImplementation testFixtures(project(":servicetalk-concurrent-internal"))
  testImplementation project(":servicetalk-concurrent-internal")
  testImplementation project(":servicetalk-concurrent-api-internal")
  testImplementation project(":servicetalk-test-resources")
  testImplementation "junit:junit"
  testImplementation "org.hamcrest:hamcrest-library"
}

jmh {
  include = ".*Benchmark"
  jmhVersion = "$jmhVersion"
  jvmArgsPrepend = "-Dio.netty.maxDirectMemory=9223372036854775807 " +
                   "-Djmh.executor=CUSTOM " +
                   "-Djmh.executor.class=io.servicetalk.benchmark.concurrent.AsyncContextFriendlyExecutor"
}

jmhJar {
  append('META-INF/spring.handlers')
  append('META-INF/spring.schemas')
}
