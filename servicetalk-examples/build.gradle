/*
 * Copyright Â© 2018-2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
if (!repositories) {
  repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
}

apply plugin: "idea"

subprojects {
  // Dependencies are purposefully not shared at this level in order for individual examples to have
  // a complete "standalone" set of dependencies that users can copy and use in their projects.
  // The dependency below is due to a side effect of the build tool.

  apply plugin: "java"

  dependencies {
    // Applications should not depend on bom-internal as it is intended for _internal_ ServiceTalk use cases only:
    // This is necessary here due to quirks in how the Gradle composite build works.
    // - When examples are part of a Gradle composite project, 3rd-party dependencies that are used by ServiceTalk
    // internally are not resolved correctly. Explicitly using bom-internal here allows the resolution to succeed.
    // - On the other hand, when examples is built as a standalone project, the bom-internal dependency is useless and
    // has no effect: transitive 3rd-party dependencies are correctly resolved for each ServiceTalk dependency.
    implementation "io.servicetalk:servicetalk-bom-internal:$project.version"
  }
}
