/*
 * Copyright Â© 2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "java"
apply plugin: "io.servicetalk.servicetalk-grpc-gradle-plugin"
apply from: "../../gradle/idea.gradle"

dependencies {
  implementation project(":servicetalk-annotations")
  implementation project(":servicetalk-grpc-api")
  implementation project(":servicetalk-grpc-netty")
  implementation project(":servicetalk-grpc-protobuf")

  implementation "org.slf4j:slf4j-api:$slf4jVersion"
  implementation "com.google.code.findbugs:jsr305:$jsr305Version"
  implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"
  runtime "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
}

serviceTalkGrpc {
  protobufVersion = project.property("protobufVersion")

  // The following setting must be omitted in users projects and is necessary here
  // only because we want to use the locally built version of the plugin
  serviceTalkProtocPluginPath = "${project.rootProject.rootDir}/servicetalk-grpc-protoc/build/buildExecutable/" +
          io.servicetalk.internal.build.ExecutableBuilder.addExecutablePostFix("protoc-gen-servicetalk_grpc",
              org.gradle.internal.os.OperatingSystem.current().isWindows())
}
