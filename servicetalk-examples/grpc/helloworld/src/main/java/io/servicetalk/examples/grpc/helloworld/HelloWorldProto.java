/*
 * Copyright Â© 2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: helloworld.proto

package io.servicetalk.examples.grpc.helloworld;

import io.servicetalk.concurrent.BlockingIterable;
import io.servicetalk.concurrent.api.AsyncCloseable;
import io.servicetalk.concurrent.api.Completable;
import io.servicetalk.concurrent.api.ListenableAsyncCloseable;
import io.servicetalk.concurrent.api.Publisher;
import io.servicetalk.concurrent.api.Single;
import io.servicetalk.grpc.api.BlockingGrpcClient;
import io.servicetalk.grpc.api.BlockingGrpcService;
import io.servicetalk.grpc.api.DefaultGrpcClientMetadata;
import io.servicetalk.grpc.api.GrpcClient;
import io.servicetalk.grpc.api.GrpcClientCallFactory;
import io.servicetalk.grpc.api.GrpcClientCallFactory.BlockingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.BlockingRequestStreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.BlockingResponseStreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.BlockingStreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.ClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.RequestStreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.ResponseStreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientCallFactory.StreamingClientCall;
import io.servicetalk.grpc.api.GrpcClientFactory;
import io.servicetalk.grpc.api.GrpcClientFilterFactory;
import io.servicetalk.grpc.api.GrpcExecutionStrategy;
import io.servicetalk.grpc.api.GrpcPayloadWriter;
import io.servicetalk.grpc.api.GrpcRoutes;
import io.servicetalk.grpc.api.GrpcSerializationProvider;
import io.servicetalk.grpc.api.GrpcService;
import io.servicetalk.grpc.api.GrpcServiceContext;
import io.servicetalk.grpc.api.GrpcServiceFactory;
import io.servicetalk.grpc.api.GrpcServiceFilterFactory;
import io.servicetalk.grpc.protobuf.ProtoBufSerializationProviderBuilder;
import io.servicetalk.transport.api.ConnectionContext;

public final class HelloWorldProto {
  private HelloWorldProto() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HelloRequestOrBuilder extends
                                         // @@protoc_insertion_point(interface_extends:helloworld.HelloRequest)
                                                 com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
    getNameBytes();
  }
  /**
   * <pre>
   * The request message containing the user's name.
   * </pre>
   *
   * Protobuf type {@code helloworld.HelloRequest}
   */
  public  static final class HelloRequest extends
                                          com.google.protobuf.GeneratedMessageV3 implements
                                                                                 // @@protoc_insertion_point(message_implements:helloworld.HelloRequest)
                                                                                         HelloRequestOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use HelloRequest.newBuilder() to construct.
    private HelloRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HelloRequest() {
      name_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HelloRequest(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.class, io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
    getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest)) {
        return super.equals(obj);
      }
      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest other = (io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest) obj;

      boolean result = true;
      result = result && getName()
              .equals(other.getName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The request message containing the user's name.
     * </pre>
     *
     * Protobuf type {@code helloworld.HelloRequest}
     */
    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                                                                                              // @@protoc_insertion_point(builder_implements:helloworld.HelloRequest)
                                                                                                      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.class, io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.Builder.class);
      }

      // Construct using io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        name_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest getDefaultInstanceForType() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.getDefaultInstance();
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest build() {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest buildPartial() {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest result = new io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest(this);
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest) {
          return mergeFrom((io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest other) {
        if (other == io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
      getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:helloworld.HelloRequest)
    }

    // @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
    private static final io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest();
    }

    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HelloRequest>
            PARSER = new com.google.protobuf.AbstractParser<HelloRequest>() {
      @Override
      public HelloRequest parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new HelloRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HelloRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HelloRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HelloReplyOrBuilder extends
                                       // @@protoc_insertion_point(interface_extends:helloworld.HelloReply)
                                               com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     */
    String getMessage();
    /**
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
    getMessageBytes();
  }
  /**
   * <pre>
   * The response message containing the greetings
   * </pre>
   *
   * Protobuf type {@code helloworld.HelloReply}
   */
  public  static final class HelloReply extends
                                        com.google.protobuf.GeneratedMessageV3 implements
                                                                               // @@protoc_insertion_point(message_implements:helloworld.HelloReply)
                                                                                       HelloReplyOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use HelloReply.newBuilder() to construct.
    private HelloReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HelloReply() {
      message_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HelloReply(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.class, io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile Object message_;
    /**
     * <code>string message = 1;</code>
     */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
    getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply)) {
        return super.equals(obj);
      }
      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply other = (io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply) obj;

      boolean result = true;
      result = result && getMessage()
              .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response message containing the greetings
     * </pre>
     *
     * Protobuf type {@code helloworld.HelloReply}
     */
    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                                                                                              // @@protoc_insertion_point(builder_implements:helloworld.HelloReply)
                                                                                                      io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.class, io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.Builder.class);
      }

      // Construct using io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply getDefaultInstanceForType() {
        return io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.getDefaultInstance();
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply build() {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply buildPartial() {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply result = new io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply) {
          return mergeFrom((io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply other) {
        if (other == io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object message_ = "";
      /**
       * <code>string message = 1;</code>
       */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
      getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:helloworld.HelloReply)
    }

    // @@protoc_insertion_point(class_scope:helloworld.HelloReply)
    private static final io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply();
    }

    public static io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HelloReply>
            PARSER = new com.google.protobuf.AbstractParser<HelloReply>() {
      @Override
      public HelloReply parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new HelloReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HelloReply> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HelloReply> getParserForType() {
      return PARSER;
    }

    @Override
    public io.servicetalk.examples.grpc.helloworld.HelloWorldProto.HelloReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_helloworld_HelloRequest_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_helloworld_HelloRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_helloworld_HelloReply_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_helloworld_HelloReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    String[] descriptorData = {
            "\n\020helloworld.proto\022\nhelloworld\"\034\n\014HelloR" +
                    "equest\022\014\n\004name\030\001 \001(\t\"\035\n\nHelloReply\022\017\n\007me" +
                    "ssage\030\001 \001(\t2I\n\007Greeter\022>\n\010SayHello\022\030.hel" +
                    "loworld.HelloRequest\032\026.helloworld.HelloR" +
                    "eply\"\000BB\n-com.apple.cie.frameworks.servi" +
                    "cetalk.examplesB\017HelloWorldProtoP\000b\006prot" +
                    "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_helloworld_HelloRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_helloworld_HelloRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_helloworld_HelloRequest_descriptor,
            new String[] { "Name", });
    internal_static_helloworld_HelloReply_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_helloworld_HelloReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_helloworld_HelloReply_descriptor,
            new String[] { "Message", });
  }

  /** Will be generated by ServiceTalk proto compiler **/

  public static final class Greeter {

    public enum RpcPaths {
      sayHello("/helloworld.Greeter/SayHello"),
      sayHelloToFromMany("/helloworld.Greeter/SayHelloToFromMany"),
      sayHelloToMany("/helloworld.Greeter/SayHelloToMany"),
      sayHelloFromMany("/helloworld.Greeter/SayHelloFromMany");

      private final String path;

      RpcPaths(final String path) {
        this.path = path;
      }

      public String path() {
        return path;
      }
    }

    private static final GrpcSerializationProvider greeterSerializationProvider;

    static {
      ProtoBufSerializationProviderBuilder builder = new ProtoBufSerializationProviderBuilder();
      builder.registerMessageType(HelloRequest.class, HelloRequest.parser());
      builder.registerMessageType(HelloReply.class, HelloReply.parser());
      greeterSerializationProvider = builder.build();
    }

    public static final class ServiceFactory
            extends GrpcServiceFactory<GreeterServiceFilter, GreeterService, GreeterServiceFilterFactory> {

      public ServiceFactory(GreeterService greeterService) {
        super(new Builder().sayHello(greeterService)
                .sayHelloToFromMany(greeterService)
                .sayHelloFromMany(greeterService)
                .sayHelloToMany(greeterService));
      }

      public ServiceFactory(BlockingGreeterService greeterService) {
        super(new Builder().sayHelloBlocking(greeterService)
                .sayHelloToFromManyBlocking(greeterService)
                .sayHelloFromManyBlocking(greeterService)
                .sayHelloToManyBlocking(greeterService));
      }

      private ServiceFactory(final Builder builder) {
        super(builder);
      }

      @Override
      public ServiceFactory appendServiceFilter(final GreeterServiceFilterFactory filterFactory) {
        super.appendServiceFilter(filterFactory);
        return this;
      }

      @Override
      protected GreeterServiceFilterFactory appendServiceFilterFactory(final GreeterServiceFilterFactory existing,
                                                                       final GreeterServiceFilterFactory append) {
        return service -> existing.create(append.create(service));
      }

      // TODO: Warn for path override and Validate all paths are defined.
      public static final class Builder extends GrpcRoutes<GreeterService> {

        public Builder sayHello(SayHelloRpc rpc) {
          addRoute(RpcPaths.sayHello.path(), rpc::sayHello, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHello(GrpcExecutionStrategy strategy, SayHelloRpc rpc) {
          addRoute(RpcPaths.sayHello.path(), strategy, rpc::sayHello, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToFromMany(SayHelloToFromManyRpc rpc) {
          addStreamingRoute(RpcPaths.sayHelloToFromMany.path(), rpc::sayHelloToFromMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToFromMany(GrpcExecutionStrategy strategy, SayHelloToFromManyRpc rpc) {
          addStreamingRoute(RpcPaths.sayHelloToFromMany.path(), strategy, rpc::sayHelloToFromMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToMany(SayHelloToManyRpc rpc) {
          addResponseStreamingRoute(RpcPaths.sayHelloToMany.path(), rpc::sayHelloToMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToMany(GrpcExecutionStrategy strategy, SayHelloToManyRpc rpc) {
          addResponseStreamingRoute(RpcPaths.sayHelloToMany.path(), strategy, rpc::sayHelloToMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloFromMany(SayHelloFromManyRpc rpc) {
          addRequestStreamingRoute(RpcPaths.sayHelloFromMany.path(), rpc::sayHelloFromMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloFromMany(GrpcExecutionStrategy strategy, SayHelloFromManyRpc rpc) {
          addRequestStreamingRoute(RpcPaths.sayHelloFromMany.path(), strategy, rpc::sayHelloFromMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloBlocking(BlockingSayHelloRpc rpc) {
          addBlockingRoute(RpcPaths.sayHello.path(), rpc::sayHello, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloBlocking(GrpcExecutionStrategy strategy, BlockingSayHelloRpc rpc) {
          addBlockingRoute(RpcPaths.sayHello.path(), strategy, rpc::sayHello, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToFromManyBlocking(BlockingSayHelloToFromManyRpc rpc) {
          addBlockingStreamingRoute(RpcPaths.sayHelloToFromMany.path(), rpc::sayHelloToFromMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToFromManyBlocking(GrpcExecutionStrategy strategy, BlockingSayHelloToFromManyRpc rpc) {
          addBlockingStreamingRoute(RpcPaths.sayHelloToFromMany.path(), strategy, rpc::sayHelloToFromMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToManyBlocking(BlockingSayHelloToManyRpc rpc) {
          addBlockingResponseStreamingRoute(RpcPaths.sayHelloToMany.path(), rpc::sayHelloToMany, HelloRequest.class,
                  HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloToManyBlocking(GrpcExecutionStrategy strategy, BlockingSayHelloToManyRpc rpc) {
          addBlockingResponseStreamingRoute(RpcPaths.sayHelloToMany.path(), strategy, rpc::sayHelloToMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloFromManyBlocking(BlockingSayHelloFromManyRpc rpc) {
          addBlockingRequestStreamingRoute(RpcPaths.sayHelloFromMany.path(), rpc::sayHelloFromMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public Builder sayHelloFromManyBlocking(GrpcExecutionStrategy strategy, BlockingSayHelloFromManyRpc rpc) {
          addBlockingRequestStreamingRoute(RpcPaths.sayHelloFromMany.path(), strategy, rpc::sayHelloFromMany,
                  HelloRequest.class, HelloReply.class, greeterSerializationProvider);
          return this;
        }

        public ServiceFactory build() {
          return new ServiceFactory(this);
        }

        @Override
        protected void registerRoutes(final GreeterService service) {
          sayHello(service);
          sayHelloToFromMany(service);
          sayHelloFromMany(service);
          sayHelloToMany(service);
        }

        @Override
        protected GreeterService newServiceFromRoutes(final AllGrpcRoutes routes) {
          return new GreeterServiceFromRoutes(routes);
        }

        private static class GreeterServiceFromRoutes implements GreeterService {
          private final RequestStreamingRoute<HelloRequest, HelloReply> sayHelloFromMany;
          private final Route<HelloRequest, HelloReply> sayHello;
          private final StreamingRoute<HelloRequest, HelloReply> sayHelloToFromMany;
          private final ResponseStreamingRoute<HelloRequest, HelloReply> sayHelloToMany;
          private final AsyncCloseable closeable;

          public GreeterServiceFromRoutes(final AllGrpcRoutes routes) {
            this.sayHelloFromMany = routes.requestStreamingRouteFor(RpcPaths.sayHelloFromMany.path());
            this.sayHello = routes.routeFor(RpcPaths.sayHello.path());;
            this.sayHelloToFromMany = routes.streamingRouteFor(RpcPaths.sayHelloToFromMany.path());
            this.sayHelloToMany = routes.responseStreamingRouteFor(RpcPaths.sayHelloToMany.path());
            closeable = routes;
          }

          @Override
          public Single<HelloReply> sayHelloFromMany(final GrpcServiceContext ctx,
                                                     final Publisher<HelloRequest> request) {
            return sayHelloFromMany.handle(ctx, request);
          }

          @Override
          public Single<HelloReply> sayHello(final GrpcServiceContext ctx,
                                             final HelloRequest request) {
            return sayHello.handle(ctx, request);
          }

          @Override
          public Publisher<HelloReply> sayHelloToFromMany(final GrpcServiceContext ctx,
                                                          final Publisher<HelloRequest> request) {
            return sayHelloToFromMany.handle(ctx, request);
          }

          @Override
          public Publisher<HelloReply> sayHelloToMany(final GrpcServiceContext ctx, final HelloRequest request) {
            return sayHelloToMany.handle(ctx, request);
          }

          @Override
          public Completable closeAsync() {
            return closeable.closeAsync();
          }

          @Override
          public Completable closeAsyncGracefully() {
            return closeable.closeAsyncGracefully();
          }
        }
      }
    }

    public interface GreeterServiceFilterFactory
            extends GrpcServiceFilterFactory<GreeterServiceFilter, GreeterService> {
    }

    public static class GreeterServiceFilter implements GreeterService {
      private final GreeterService delegate;

      protected GreeterServiceFilter(final GreeterService delegate) {
        this.delegate = delegate;
      }

      @Override
      public Completable closeAsync() {
        return delegate.closeAsync();
      }

      @Override
      public Single<HelloReply> sayHello(final GrpcServiceContext ctx, final HelloRequest request) {
        return delegate.sayHello(ctx, request);
      }

      @Override
      public Publisher<HelloReply> sayHelloToFromMany(final GrpcServiceContext ctx,
                                                      final Publisher<HelloRequest> request) {
        return delegate.sayHelloToFromMany(ctx, request);
      }

      @Override
      public Publisher<HelloReply> sayHelloToMany(final GrpcServiceContext ctx, final HelloRequest request) {
        return delegate.sayHelloToMany(ctx, request);
      }

      @Override
      public Single<HelloReply> sayHelloFromMany(final GrpcServiceContext ctx, final Publisher<HelloRequest> request) {
        return delegate.sayHelloFromMany(ctx, request);
      }

      @Override
      public Completable closeAsyncGracefully() {
        return delegate.closeAsyncGracefully();
      }

      protected GreeterService delegate() {
        return delegate;
      }
    }

    public interface GreeterService extends SayHelloRpc, SayHelloToFromManyRpc, SayHelloToManyRpc,
                                            SayHelloFromManyRpc, GrpcService {

      @Override
      default Completable closeAsync() {
        return Completable.completed();
      }
    }

    public interface BlockingGreeterService extends BlockingSayHelloRpc, BlockingSayHelloToFromManyRpc,
                                                    BlockingSayHelloFromManyRpc, BlockingSayHelloToManyRpc,
                                                    BlockingGrpcService {
      @Override
      default void close() {
        // noop
      }
    }

    public interface SayHelloRpc {
      Single<HelloReply> sayHello(GrpcServiceContext ctx, HelloRequest request);
    }

    public interface SayHelloToFromManyRpc {
      Publisher<HelloReply> sayHelloToFromMany(GrpcServiceContext ctx, Publisher<HelloRequest> request);
    }

    public interface SayHelloToManyRpc {
      Publisher<HelloReply> sayHelloToMany(GrpcServiceContext ctx, HelloRequest request);
    }

    public interface SayHelloFromManyRpc {
      Single<HelloReply> sayHelloFromMany(GrpcServiceContext ctx, Publisher<HelloRequest> request);
    }

    public interface BlockingSayHelloRpc {
      HelloReply sayHello(ConnectionContext ctx, HelloRequest request) throws Exception;
    }

    public interface BlockingSayHelloToFromManyRpc {
      void sayHelloToFromMany(GrpcServiceContext ctx, BlockingIterable<HelloRequest> request,
                              GrpcPayloadWriter<HelloReply> responseWriter) throws Exception;
    }

    public interface BlockingSayHelloToManyRpc {
      void sayHelloToMany(GrpcServiceContext ctx, HelloRequest request, GrpcPayloadWriter<HelloReply> responseWriter)
              throws Exception;
    }

    public interface BlockingSayHelloFromManyRpc {
      HelloReply sayHelloFromMany(GrpcServiceContext ctx, BlockingIterable<HelloRequest> request) throws Exception;
    }

    public static final class ClientFactory
            extends GrpcClientFactory<GreeterClient, BlockingGreeterClient, GreeterClientFilter,
            FilterableGreeterClient, GreeterClientFilterFactory> {

      @Override
      protected GreeterClientFilterFactory appendClientFilterFactory(final GreeterClientFilterFactory existing,
                                                                     final GreeterClientFilterFactory append) {
        return filterableGreeterClient -> existing.create(append.create(filterableGreeterClient));
      }

      @Override
      protected GreeterClient newClient(final GrpcClientCallFactory clientCallFactory) {
        return new DefaultGreeterClient(clientCallFactory);
      }

      @Override
      protected GreeterClientFilter newFilter(final GreeterClient client,
                                              final GreeterClientFilterFactory filterFactory) {
        return filterFactory.create(client);
      }

      @Override
      protected GreeterClient newClient(final FilterableGreeterClient filterableGreeterClient) {
        return new FilterableClientToGreeterClient(filterableGreeterClient);
      }

      @Override
      protected BlockingGreeterClient newBlockingClient(final GrpcClientCallFactory clientCallFactory) {
        return new DefaultBlockingGreeterClient(clientCallFactory);
      }

      private static final class FilterableClientToGreeterClient implements GreeterClient {
        private final FilterableGreeterClient filterableGreeterClient;

        FilterableClientToGreeterClient(final FilterableGreeterClient filterableGreeterClient) {
          this.filterableGreeterClient = filterableGreeterClient;
        }

        @Override
        public Single<HelloReply> sayHello(final SayHelloMetadata metadata, final HelloRequest request) {
          return filterableGreeterClient.sayHello(metadata, request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToFromMany(final SayHelloToFromManyMetadata metadata,
                                                        final Publisher<HelloRequest> request) {
          return filterableGreeterClient.sayHelloToFromMany(metadata, request);
        }

        @Override
        public Single<HelloReply> sayHelloFromMany(final SayHelloFromManyMetadata metadata,
                                                   final Publisher<HelloRequest> request) {
          return filterableGreeterClient.sayHelloFromMany(metadata, request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToMany(final SayHelloToManyMetadata metadata, final HelloRequest request) {
          return filterableGreeterClient.sayHelloToMany(metadata, request);
        }

        @Override
        public Completable onClose() {
          return filterableGreeterClient.onClose();
        }

        @Override
        public Completable closeAsync() {
          return filterableGreeterClient.closeAsync();
        }

        @Override
        public Completable closeAsyncGracefully() {
          return filterableGreeterClient.closeAsyncGracefully();
        }

        @Override
        public void close() throws Exception {
          filterableGreeterClient.close();
        }

        @Override
        public Single<HelloReply> sayHello(final HelloRequest request) {
          return filterableGreeterClient.sayHello(new SayHelloMetadata(), request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToFromMany(final Publisher<HelloRequest> request) {
          return filterableGreeterClient.sayHelloToFromMany(new SayHelloToFromManyMetadata(), request);
        }

        @Override
        public Single<HelloReply> sayHelloFromMany(final Publisher<HelloRequest> request) {
          return filterableGreeterClient.sayHelloFromMany(new SayHelloFromManyMetadata(), request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToMany(final HelloRequest request) {
          return filterableGreeterClient.sayHelloToMany(new SayHelloToManyMetadata(), request);
        }

        @Override
        public BlockingGreeterClient asBlockingClient() {
          return new GreeterClientToBlockingGreeterClient(this);
        }
      }

      private static final class GreeterClientToBlockingGreeterClient implements BlockingGreeterClient {
        private final GreeterClient client;

        GreeterClientToBlockingGreeterClient(final GreeterClient client) {
          this.client = client;
        }

        @Override
        public HelloReply sayHello(final HelloRequest request) throws Exception {
          return client.sayHello(request).toFuture().get();
        }

        @Override
        public HelloReply sayHello(final SayHelloMetadata metadata, final HelloRequest request) throws Exception {
          return client.sayHello(metadata, request).toFuture().get();
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToFromMany(final Iterable<HelloRequest> request)
                throws Exception {
          return client.sayHelloToFromMany(Publisher.fromIterable(request)).toIterable();
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToFromMany(final SayHelloToFromManyMetadata metadata,
                                                               final Iterable<HelloRequest> request)
                throws Exception {
          return client.sayHelloToFromMany(metadata, Publisher.fromIterable(request)).toIterable();
        }

        @Override
        public HelloReply sayHelloFromMany(final Iterable<HelloRequest> request) throws Exception {
          return client.sayHelloFromMany(Publisher.fromIterable(request)).toFuture().get();
        }

        @Override
        public HelloReply sayHelloFromMany(final SayHelloFromManyMetadata metadata,
                                           final Iterable<HelloRequest> request) throws Exception {
          return client.sayHelloFromMany(metadata, Publisher.fromIterable(request)).toFuture().get();
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToMany(final HelloRequest request) throws Exception {
          return client.sayHelloToMany(request).toIterable();
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToMany(final SayHelloToManyMetadata metadata,
                                                           final HelloRequest request) throws Exception {
          return client.sayHelloToMany(metadata, request).toIterable();
        }

        @Override
        public GreeterClient asClient() {
          return client;
        }

        @Override
        public void close() throws Exception {
          client.close();
        }

        @Override
        public void closeGracefully() throws Exception {
          client.closeAsyncGracefully().toFuture().get();
        }
      }

      private static final class DefaultGreeterClient implements GreeterClient {

        private final ClientCall<HelloRequest, HelloReply> sayHelloCall;
        private final StreamingClientCall<HelloRequest, HelloReply> sayHelloToFromManyCall;
        private final RequestStreamingClientCall<HelloRequest, HelloReply> sayHelloFromManyCall;
        private final ResponseStreamingClientCall<HelloRequest, HelloReply> sayHelloToManyCall;
        private final GrpcClientCallFactory callFactory;

        public DefaultGreeterClient(final GrpcClientCallFactory callFactory) {
          this.callFactory = callFactory;
          sayHelloCall = callFactory.newCall(greeterSerializationProvider, HelloRequest.class, HelloReply.class);
          sayHelloToFromManyCall = callFactory.newStreamingCall(greeterSerializationProvider, HelloRequest.class,
                  HelloReply.class);
          sayHelloFromManyCall = callFactory.newRequestStreamingCall(greeterSerializationProvider, HelloRequest.class,
                  HelloReply.class);
          sayHelloToManyCall = callFactory.newResponseStreamingCall(greeterSerializationProvider, HelloRequest.class,
                  HelloReply.class);
        }

        @Override
        public Single<HelloReply> sayHello(final HelloRequest request) {
          return sayHello(new SayHelloMetadata(), request);
        }

        @Override
        public Single<HelloReply> sayHello(final SayHelloMetadata metadata, final HelloRequest request) {
          return sayHelloCall.request(metadata, request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToFromMany(final Publisher<HelloRequest> request) {
          return sayHelloToFromMany(new SayHelloToFromManyMetadata(), request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToFromMany(final SayHelloToFromManyMetadata metadata,
                                                        final Publisher<HelloRequest> request) {
          return sayHelloToFromManyCall.request(metadata, request);
        }

        @Override
        public Single<HelloReply> sayHelloFromMany(final Publisher<HelloRequest> request) {
          return sayHelloFromMany(new SayHelloFromManyMetadata(), request);
        }

        @Override
        public Single<HelloReply> sayHelloFromMany(final SayHelloFromManyMetadata metadata,
                                                   final Publisher<HelloRequest> request) {
          return sayHelloFromManyCall.request(metadata, request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToMany(final HelloRequest request) {
          return sayHelloToMany(new SayHelloToManyMetadata(), request);
        }

        @Override
        public Publisher<HelloReply> sayHelloToMany(final SayHelloToManyMetadata metadata,
                                                    final HelloRequest request) {
          return sayHelloToManyCall.request(metadata, request);
        }

        @Override
        public BlockingGreeterClient asBlockingClient() {
          // TODO: Cache client
          return new DefaultBlockingGreeterClient(callFactory);
        }

        @Override
        public Completable onClose() {
          return callFactory.onClose();
        }

        @Override
        public Completable closeAsync() {
          return callFactory.closeAsync();
        }

        @Override
        public Completable closeAsyncGracefully() {
          return callFactory.closeAsyncGracefully();
        }

        @Override
        public void close() throws Exception {
          closeAsyncGracefully().toFuture().get();
        }
      }

      private static class DefaultBlockingGreeterClient implements BlockingGreeterClient {

        private final BlockingClientCall<HelloRequest, HelloReply> sayHelloCall;
        private final BlockingStreamingClientCall<HelloRequest, HelloReply> sayHelloToFromManyCall;
        private final BlockingRequestStreamingClientCall<HelloRequest, HelloReply> sayHelloFromManyCall;
        private final BlockingResponseStreamingClientCall<HelloRequest, HelloReply> sayHelloToManyCall;
        private final GrpcClientCallFactory callFactory;

        DefaultBlockingGreeterClient(final GrpcClientCallFactory callFactory) {
          sayHelloCall = callFactory.newBlockingCall(greeterSerializationProvider, HelloRequest.class,
                  HelloReply.class);
          sayHelloToFromManyCall = callFactory.newBlockingStreamingCall(greeterSerializationProvider,
                  HelloRequest.class, HelloReply.class);
          sayHelloFromManyCall = callFactory.newBlockingRequestStreamingCall(greeterSerializationProvider,
                  HelloRequest.class, HelloReply.class);
          sayHelloToManyCall = callFactory.newBlockingResponseStreamingCall(greeterSerializationProvider,
                  HelloRequest.class, HelloReply.class);
          this.callFactory = callFactory;
        }

        @Override
        public HelloReply sayHello(final HelloRequest request) throws Exception {
          return sayHello(new SayHelloMetadata(), request);
        }

        @Override
        public HelloReply sayHello(final SayHelloMetadata metadata, final HelloRequest request) throws Exception {
          return sayHelloCall.request(metadata, request);
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToFromMany(final Iterable<HelloRequest> request)
                throws Exception {
          return sayHelloToFromMany(new SayHelloToFromManyMetadata(), request);
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToFromMany(final SayHelloToFromManyMetadata metadata,
                                                               final Iterable<HelloRequest> request)
                throws Exception {
          return sayHelloToFromManyCall.request(metadata, request);
        }

        @Override
        public HelloReply sayHelloFromMany(final Iterable<HelloRequest> request) throws Exception {
          return sayHelloFromMany(new SayHelloFromManyMetadata(), request);
        }

        @Override
        public HelloReply sayHelloFromMany(final SayHelloFromManyMetadata metadata,
                                           final Iterable<HelloRequest> request) throws Exception {
          return sayHelloFromManyCall.request(metadata, request);
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToMany(final HelloRequest request) throws Exception {
          return sayHelloToMany(new SayHelloToManyMetadata(), request);
        }

        @Override
        public BlockingIterable<HelloReply> sayHelloToMany(final SayHelloToManyMetadata metadata,
                                                           final HelloRequest request) throws Exception {
          return sayHelloToManyCall.request(metadata, request);
        }

        @Override
        public GreeterClient asClient() {
          // TODO: Cache client
          return new DefaultGreeterClient(callFactory);
        }

        @Override
        public void close() throws Exception {
          callFactory.closeAsync().toFuture().get();
        }

        @Override
        public void closeGracefully() throws Exception {
          callFactory.closeAsyncGracefully().toFuture().get();
        }
      }
    }

    public static final class SayHelloMetadata extends DefaultGrpcClientMetadata {
      public SayHelloMetadata() {
        super(RpcPaths.sayHello.path());
      }
    }

    public static final class SayHelloToFromManyMetadata extends DefaultGrpcClientMetadata {
      public SayHelloToFromManyMetadata() {
        super(RpcPaths.sayHelloToFromMany.path());
      }
    }

    public static final class SayHelloToManyMetadata extends DefaultGrpcClientMetadata {
      public SayHelloToManyMetadata() {
        super(RpcPaths.sayHelloToMany.path());
      }
    }

    public static final class SayHelloFromManyMetadata extends DefaultGrpcClientMetadata {
      public SayHelloFromManyMetadata() {
        super(RpcPaths.sayHelloFromMany.path());
      }
    }

    public static class GreeterClientFilter implements FilterableGreeterClient {

      private final FilterableGreeterClient delegate;

      protected GreeterClientFilter(final FilterableGreeterClient delegate) {
        this.delegate = delegate;
      }

      @Override
      public Single<HelloReply> sayHello(final SayHelloMetadata metadata, final HelloRequest request) {
        return delegate.sayHello(metadata, request);
      }

      @Override
      public Publisher<HelloReply> sayHelloToFromMany(final SayHelloToFromManyMetadata metadata,
                                                      final Publisher<HelloRequest> request) {
        return delegate.sayHelloToFromMany(metadata, request);
      }

      @Override
      public Single<HelloReply> sayHelloFromMany(final SayHelloFromManyMetadata metadata,
                                                 final Publisher<HelloRequest> request) {
        return delegate.sayHelloFromMany(metadata, request);
      }

      @Override
      public Publisher<HelloReply> sayHelloToMany(final SayHelloToManyMetadata metadata, final HelloRequest request) {
        return delegate.sayHelloToMany(metadata, request);
      }

      @Override
      public Completable onClose() {
        return delegate.onClose();
      }

      @Override
      public Completable closeAsync() {
        return delegate.closeAsync();
      }

      @Override
      public Completable closeAsyncGracefully() {
        return delegate.closeAsyncGracefully();
      }

      @Override
      public void close() throws Exception {
        delegate.closeAsync().toFuture().get();
      }
    }

    public interface GreeterClientFilterFactory
            extends GrpcClientFilterFactory<GreeterClientFilter, FilterableGreeterClient> {
    }

    public interface FilterableGreeterClient extends ListenableAsyncCloseable, AutoCloseable {

      Single<HelloReply> sayHello(SayHelloMetadata metadata, HelloRequest request);

      Publisher<HelloReply> sayHelloToFromMany(SayHelloToFromManyMetadata metadata, Publisher<HelloRequest> request);

      Single<HelloReply> sayHelloFromMany(SayHelloFromManyMetadata metadata, Publisher<HelloRequest> request);

      Publisher<HelloReply> sayHelloToMany(SayHelloToManyMetadata metadata, HelloRequest request);
    }

    public interface GreeterClient extends FilterableGreeterClient, GrpcClient<BlockingGreeterClient> {

      Single<HelloReply> sayHello(HelloRequest request);

      Publisher<HelloReply> sayHelloToFromMany(Publisher<HelloRequest> request);

      Single<HelloReply> sayHelloFromMany(Publisher<HelloRequest> request);

      Publisher<HelloReply> sayHelloToMany(HelloRequest request);
    }

    public interface BlockingGreeterClient extends BlockingGrpcClient<GreeterClient> {

      HelloReply sayHello(HelloRequest request) throws Exception;

      HelloReply sayHello(SayHelloMetadata metadata, HelloRequest request) throws Exception;

      BlockingIterable<HelloReply> sayHelloToFromMany(Iterable<HelloRequest> request) throws Exception;

      BlockingIterable<HelloReply> sayHelloToFromMany(SayHelloToFromManyMetadata metadata,
                                                      Iterable<HelloRequest> request) throws Exception;

      HelloReply sayHelloFromMany(Iterable<HelloRequest> request) throws Exception;

      HelloReply sayHelloFromMany(SayHelloFromManyMetadata metadata, Iterable<HelloRequest> request)
              throws Exception;

      BlockingIterable<HelloReply> sayHelloToMany(HelloRequest request) throws Exception;

      BlockingIterable<HelloReply> sayHelloToMany(SayHelloToManyMetadata metadata, HelloRequest request)
              throws Exception;
    }
  }
  // @@protoc_insertion_point(outer_class_scope)
}
