<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2018 Apple Inc. and the ServiceTalk project authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
  <property name="charset" value="UTF-8"/>

  <module name="SuppressionFilter">
    <property name="file" value="${config_loc}/global-suppressions.xml"/>
    <property name="optional" value="false"/>
  </module>
  <module name="SuppressionFilter">
    <property name="file" value="${config_loc}/local-suppressions.xml"/>
    <property name="optional" value="true"/>
  </module>

  <!-- Copyrights -->
  <module name="RegexpHeader">
    <property name="id" value="CopyrightHeader"/>
    <property name="headerFile" value="${config_loc}/copyright-slashstar-style.header"/>
    <property name="fileExtensions" value="java, groovy, kt, gradle"/>
  </module>
  <module name="RegexpHeader">
    <property name="id" value="CopyrightHeader"/>
    <property name="headerFile" value="${config_loc}/copyright-xml-style.header"/>
    <property name="fileExtensions" value="xml, xhtml, xsd, pom"/>
  </module>
  <module name="RegexpHeader">
    <property name="id" value="CopyrightHeader"/>
    <property name="headerFile" value="${config_loc}/copyright-script-style.header"/>
    <property name="fileExtensions" value="properties, yml, yaml"/>
  </module>
  <module name="RegexpHeader">
    <property name="id" value="CopyrightHeader"/>
    <property name="headerFile" value="${config_loc}/copyright-sh-script-style.header"/>
    <property name="fileExtensions" value="sh"/>
  </module>

  <!-- Prohibit trailing whitespace -->
  <module name="RegexpSingleline">
    <property name="id" value="TrailingWhitespace"/>
    <property name="format" value="\s+$"/>
    <property name="message" value="Trailing whitespace"/>
  </module>
  <!-- Prohibit an empty line before '}' -->
  <module name="RegexpMultiline">
    <property name="id" value="EmptyLineBeforeBlockClose"/>
    <property name="format" value="\n\n\s*\}[^\n]{0,10}\n"/>
    <property name="message" value="An empty line at the end of the code block"/>
  </module>
  <!-- Prohibit multiple empty lines at the end of file -->
  <module name="RegexpMultiline">
    <property name="id" value="MoreThanOneNewlineAtEndOfFile"/>
    <property name="format" value="\n{2,}\z"/>
    <property name="message" value="More than one new line at the end of file"/>
  </module>

  <!-- Require an empty line after package declaration -->
  <module name="RegexpMultiline">
    <property name="id" value="RequireEmptyLineAfterPackage"/>
    <property name="format" value="\npackage [^\n]*;\n[^\n]"/>
    <property name="message" value="An empty line after the package declaration"/>
  </module>

  <!-- Prohibit merge conflicts -->
  <module name="RegexpSingleline">
    <property name="format" value="&lt;&lt;&lt;&lt;&lt;&lt;&lt;"/>
    <property name="message" value="Found (&lt;&lt;&lt;&lt;&lt;&lt;&lt;), which is a potential merge conflict"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="&gt;&gt;&gt;&gt;&gt;&gt;&gt;"/>
    <property name="message" value="Found (&gt;&gt;&gt;&gt;&gt;&gt;&gt;), which is a potential merge conflict"/>
  </module>

  <!-- General formatting -->
  <module name="FileTabCharacter"/>
  <module name="JavadocPackage"/>
  <module name="LineLength">
    <property name="max" value="120"/>
  </module>
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>
  <module name="UniqueProperties"/>

  <module name="TreeWalker">
    <!-- Prohibit calls to print to the console -->
    <module name="RegexpSinglelineJava">
      <property name="id" value="ConsolePrint"/>
      <property name="format" value="System\.(out)|(err)\.print(ln)?"/>
      <property name="message" value="Call to print to the console. Remove it or add to the suppressions.xml"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <!-- Ensures that we have @ElementsAreNonnullByDefault annotation in package-info.java -->
    <module name="RegexpSinglelineJava">
      <property name="id" value="MissedElementsAreNonnullByDefault"/>
      <property name="format" value="^\s*@ElementsAreNonnullByDefault\s*$"/>
      <property name="minimum" value="1"/>
      <property name="maximum" value="1"/>
      <property name="message" value="Missed @ElementsAreNonnullByDefault annotation on package"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <!-- Prohibit comparing this with null (i.e. this == null and this != null) -->
    <module name="DescendantToken">
      <property name="tokens" value="EQUAL,NOT_EQUAL"/>
      <property name="limitedTokens" value="LITERAL_THIS,LITERAL_NULL"/>
      <property name="maximumNumber" value="1"/>
      <property name="maximumDepth" value="1"/>
      <property name="sumTokenCounts" value="true"/>
      <property name="maximumMessage" value="Comparing this with null (i.e. this == null and this != null)"/>
    </module>
    <!-- Assert statement may have side effects -->
    <module name="DescendantToken">
      <property name="tokens" value="LITERAL_ASSERT"/>
      <property name="limitedTokens" value="ASSIGN,DEC, INC, POST_DEC, POST_INC, PLUS_ASSIGN, MINUS_ASSIGN,
                                            STAR_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BSR_ASSIGN, SR_ASSIGN,
                                            SL_ASSIGN, BAND_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN"/>
      <property name="maximumNumber" value="0"/>
      <property name="maximumMessage" value="Assert statement may have side effects"/>
    </module>
    <!-- Prohibit a return statement from within a finally block -->
    <module name="DescendantToken">
      <property name="tokens" value="LITERAL_FINALLY"/>
      <property name="limitedTokens" value="LITERAL_RETURN"/>
      <property name="maximumNumber" value="0"/>
      <property name="maximumMessage" value="A return statement from within a finally block"/>
    </module>

    <!-- Annotations -->
    <module name="AnnotationLocation">
      <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
    </module>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <module name="PackageAnnotation"/>

    <!-- Class Design -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="OneTopLevelClass"/>
    <module name="VisibilityModifier">
      <property name="packageAllowed" value="true"/>
      <property name="protectedAllowed" value="true"/>
      <property name="allowPublicFinalFields" value="true"/>
    </module>

    <!-- Imports -->
    <module name="AvoidStarImport"/>
    <module name="UnusedImports">
    </module>
    <module name="CustomImportOrder">
      <property name="thirdPartyPackageRegExp" value=".*"/>
      <property name="specialImportsRegExp" value="io.servicetalk"/>
      <property name="sortImportsInGroupAlphabetically" value="true"/>
      <property name="customImportOrderRules"
                value="SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE###STATIC"/>
    </module>
    <module name="RedundantImport"/>

    <!-- Modifiers -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Whitespace -->
    <module name="EmptyForInitializerPad"/>
    <module name="EmptyForIteratorPad"/>
    <module name="EmptyLineSeparator">
      <property name="allowMultipleEmptyLines" value="false"/>
      <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
      <property name="tokens" value="IMPORT, CLASS_DEF, ENUM_DEF, INTERFACE_DEF,
                                     CTOR_DEF, METHOD_DEF, STATIC_INIT, INSTANCE_INIT"/>
    </module>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoLineWrap"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap">
      <property name="tokens" value="ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN, SR_ASSIGN,
                                     BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN, QUESTION"/>
      <property name="option" value="eol"/>
    </module>
    <module name="ParenPad"/>
    <module name="SingleSpaceSeparator"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="ignoreEnhancedForColon" value="false"/>
    </module>

    <!-- Block Checks -->
    <module name="NeedBraces"/>
    <module name="LeftCurly"/>
    <module name="RightCurly"/>
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="EmptyCatchBlock"/>

    <!-- Javadocs -->
    <module name="AtclauseOrder"/>
    <module name="JavadocMethod">
      <property name="accessModifiers" value="public, protected"/>
    </module>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="JavadocStyle">
      <property name="scope" value="protected"/>
      <property name="checkEmptyJavadoc" value="true"/>
      <property name="tokens" value="ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF,
                                     CTOR_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF"/>
    </module>
    <module name="JavadocType">
      <property name="scope" value="protected"/>
    </module>
    <module name="SingleLineJavadoc"/>
    <module name="RegexpSinglelineJava">
      <property name="format" value="^\s*\*\s*@author"/>
      <property name="ignoreCase" value="true"/>
      <property name="message" value="Javadoc has illegal @author tag"/>
    </module>
    <module name="InvalidJavadocPosition"/>
    <module name="JavadocBlockTagLocation"/>
    <module name="JavadocContentLocationCheck"/>
    <module name="JavadocMissingWhitespaceAfterAsterisk"/>

    <!-- Miscellaneous -->
    <module name="ArrayTypeStyle"/>
    <module name="CommentsIndentation"/>
    <module name="NoCodeInFile"/>
    <module name="OuterTypeFilename"/>
    <module name="UncommentedMain"/>
    <module name="UpperEll"/>

    <!-- Coding -->
    <module name="ArrayTrailingComma"/>
    <module name="AvoidDoubleBraceInitialization"/>
    <module name="AvoidNoArgumentSuperConstructorCall"/>
    <module name="CovariantEquals"/>
    <module name="DeclarationOrder">
      <property name="ignoreModifiers" value="true"/>
    </module>
    <module name="DefaultComesLast"/>
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="IllegalInstantiation">
      <property name="id" value="IllegalInstantiationOfPrimitives"/>
      <property name="classes" value="java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Integer,
                                      java.lang.Long, java.lang.Float, java.lang.Double"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="id" value="IllegalInstantiationOfString"/>
      <property name="classes" value="java.lang.String"/>
    </module>
    <module name="IllegalThrows"/>
    <module name="IllegalType">
      <property name="ignoredMethodNames" value=""/>
      <property name="memberModifiers" value="LITERAL_PUBLIC, LITERAL_PROTECTED"/>
      <property name="illegalClassNames" value="java.util.HashSet, java.util.LinkedHashSet, java.util.TreeSet,
                                                java.util.HashMap, java.util.LinkedHashMap, java.util.TreeMap,
                                                java.util.ArrayList, java.util.LinkedList, java.util.ArrayDeque,
                                                java.util.Vector, java.util.Hashtable"/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="ModifiedControlVariable"/>
    <module name="NoClone"/>
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine"/>
    <module name="PackageDeclaration"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
    <module name="UnnecessarySemicolonInEnumeration"/>
    <module name="UnnecessarySemicolonInTryWithResources"/>

    <!-- Naming Conventions -->
    <module name="ConstantName">
      <property name="applyToPrivate" value="false"/>
      <property name="applyToPackage" value="false"/>
    </module>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName">
      <property name="allowOneCharVarInForLoop" value="true"/>
    </module>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName">
      <property name="format" value="^([a-z][a-zA-Z0-9]*|_+)$"/>
    </module>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

  </module>
</module>
