/*
 * Copyright Â© 2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "io.servicetalk.servicetalk-gradle-plugin-internal-library"
apply plugin: "io.servicetalk.servicetalk-grpc-gradle-plugin"

dependencies {
  api project(":servicetalk-grpc-api")
  api project(":servicetalk-http-netty")

  implementation project(":servicetalk-annotations")
  implementation project(":servicetalk-transport-netty-internal")
  implementation "org.slf4j:slf4j-api:$slf4jVersion"
  implementation "com.google.code.findbugs:jsr305:$jsr305Version"

  testImplementation testFixtures(project(":servicetalk-concurrent-api"))
  testImplementation testFixtures(project(":servicetalk-concurrent-internal"))
  testImplementation testFixtures(project(":servicetalk-transport-netty-internal"))
  testImplementation project(":servicetalk-concurrent-api-internal")
  testImplementation project(":servicetalk-grpc-protobuf")
  testImplementation project(":servicetalk-grpc-protoc")
  testImplementation project(":servicetalk-router-utils-internal")
  testImplementation project(":servicetalk-test-resources")
  testImplementation project(":servicetalk-utils-internal")
  testImplementation "io.grpc:grpc-core:$grpcVersion"
  testImplementation("io.grpc:grpc-netty:$grpcVersion") {
    exclude group: "io.netty"
  }
  testImplementation "io.grpc:grpc-protobuf:$grpcVersion"
  testImplementation "io.grpc:grpc-stub:$grpcVersion"
  testImplementation "io.netty:netty-transport-native-unix-common:$nettyVersion"
  testImplementation "io.netty:netty-tcnative-boringssl-static:$tcnativeVersion"
  testImplementation "jakarta.annotation:jakarta.annotation-api:$javaxAnnotationsApiVersion"
  testImplementation "junit:junit:$junitVersion"
  testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
  testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
}

serviceTalkGrpc {
  protobufVersion = project.property("protobufVersion")

  // The following setting must be omitted in users projects and is necessary here
  // only because we want to use the locally built version of the plugin
  serviceTalkProtocPluginPath =  "${project.rootProject.rootDir}/servicetalk-grpc-protoc/build/buildExecutable/" +
          io.servicetalk.internal.build.ExecutableBuilder.addExecutablePostFix("protoc-gen-servicetalk_grpc",
              org.gradle.internal.os.OperatingSystem.current().isWindows())
}

afterEvaluate {
  generateTestProto.dependsOn(":servicetalk-grpc-protoc:buildExecutable")
}

// Configure grpc-java as required by ProtocolCompatibilityTest
def generatedBaseDir = "$projectDir/generated"

protobuf {
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
  }
  generateProtoTasks {
    configure(all()) {
      project.tasks.ideaModule.dependsOn(it)
      plugins {
        grpc {}
      }
    }
  }
  generatedFilesBaseDir = generatedBaseDir
}

idea {
  module {
    testSourceDirs += files("$generatedBaseDir/source/proto/test/grpc")
  }
}
