/*
 * Copyright Â© 2019 Apple Inc. and the ServiceTalk project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "io.servicetalk.servicetalk-gradle-plugin-internal-library"

afterEvaluate {
  if (tasks.findByName("projectHealth")) {
    dependencyAnalysis {
      issues {
        // False positives for testFixturesApi
        onIncorrectConfiguration {
          exclude("org.reactivestreams:reactive-streams-tck")
        }
      }
    }
  }
}

dependencies {
  api project(":servicetalk-concurrent")
  api project(":servicetalk-concurrent-api")
  api "org.reactivestreams:reactive-streams:$reactiveStreamsVersion"

  implementation project(":servicetalk-annotations")

  testImplementation enforcedPlatform("org.junit:junit-bom:$junit5Version")
  testImplementation testFixtures(project(":servicetalk-concurrent-api"))
  testImplementation testFixtures(project(":servicetalk-concurrent-internal"))
  testImplementation project(":servicetalk-buffer-api")
  testImplementation project(":servicetalk-buffer-netty")
  testImplementation project(":servicetalk-serializer-api")
  testImplementation project(":servicetalk-serializer-utils")
  testImplementation project(":servicetalk-test-resources")
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
  testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"
  testImplementation "org.testng:testng:$testngVersion"

  testFixturesApi project(":servicetalk-concurrent-api")
  testFixturesApi "org.reactivestreams:reactive-streams:$reactiveStreamsVersion"
  testFixturesApi "org.reactivestreams:reactive-streams-tck:$reactiveStreamsVersion"
  testFixturesImplementation testFixtures(project(":servicetalk-concurrent-internal"))
}

// We need testng for the reactive-streams-tck
task tck(type: Test) {
  useTestNG()
}

test.dependsOn tck
